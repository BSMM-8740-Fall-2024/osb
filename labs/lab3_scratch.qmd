---
title: "cocktails_scratch"
---

```{r}
#| eval: false
library(magrittr).  # the pipe
library(tidyverse)  # for data wrangling + visualization
library(tidymodels) # for modeling
library(gt)      # for pretty printing of tables
theme_set(theme_bw(base_size = 18))
```

```{r}
#| eval: false
base_url <- 'https://raw.githubusercontent.com'
boston_cocktails <- 
  readr::read_csv(
    stringr::str_glue(
      "{base_url}/rfordatascience/tidytuesday/master/data/2020/2020-05-26/boston_cocktails.csv"
    )
    , show_col_types = FALSE
  )
```

```{r}
#| eval: false
boston_cocktails %>%
  dplyr::count(ingredient, sort = TRUE) %>% 
  dplyr::slice_head(n=10) %>% 
  dplyr::glimpse()
```

as

```{r}
#| eval: false
boston_cocktails %>% 
  dplyr::filter(
    stringr::str_detect(ingredient,'bitters') 
  ) %>% 
  dplyr::select(ingredient) %>% 
  dplyr::distinct()
```

as

```{r}
#| eval: false
cocktails_parsed <- boston_cocktails %>%
  mutate(
    ingredient = str_to_lower(ingredient),
    ingredient = str_replace_all(ingredient, "-", " "),
    ingredient = str_remove(ingredient, " liqueur$"),
    ingredient = str_remove(ingredient, " (if desired)$"),
    ingredient = case_when(
      str_detect(ingredient, "bitters") ~ "bitters",
      str_detect(ingredient, "lemon") ~ "lemon juice",
      str_detect(ingredient, "lime") ~ "lime juice",
      str_detect(ingredient, "grapefruit") ~ "grapefruit juice",
      str_detect(ingredient, "orange") ~ "orange juice",
      TRUE ~ ingredient
    ),
    measure = case_when(
      str_detect(ingredient, "bitters") ~ str_replace(measure, "oz$", "dash"),
      TRUE ~ measure
    ),
    measure = str_replace(measure, " ?1/2", ".5"),
    measure = str_replace(measure, " ?3/4", ".75"),
    measure = str_replace(measure, " ?1/4", ".25"),
    measure_number = parse_number(measure),
    measure_number = if_else(str_detect(measure, "dash$"),
      measure_number / 50,
      measure_number
    )
  ) %>%
  add_count(ingredient) %>%
  filter(n > 15) %>%
  select(-n) %>%
  distinct(row_id, ingredient, .keep_all = TRUE) %>%
  na.omit()
```

boston_cocktails\[c(636,637,671),\]

```{r}
#| eval: false
foo <- boston_cocktails[c(636,637,671),]
```

## Lab 3

```{r}
#| eval: false
cocktails_parsed %>% readr::write_csv('data/boston_cocktails.csv')
```

```{r}
#| eval: false
boston_cocktails <- readr::read_csv('data/boston_cocktails.csv', show_col_types = FALSE)
```

### Ex 1

```{r}
#| eval: false
boston_cocktails %>% DataExplorer::introduce()
```

```{r}
#| eval: false
boston_cocktails %>% summary() %>% glimpse()
```

### Ex 2

```{r}
#| eval: false
cocktails_df <- boston_cocktails %>%
  dplyr::select(-ingredient_number, -row_id, -measure) %>%
  tidyr::pivot_wider(names_from = ingredient, values_from = measure_number, values_fill = 0) %>%
  janitor::clean_names() %>% 
  # na.omit()
cocktails_df
```

```{r}
#| eval: false
cocktails_df %>% dplyr::filter(name == 'Leap Frog Highball') %>% 
  dplyr::pull(gin)
```

```{r}
#| eval: false
pca_rec <- recipes::recipe(~., data = cocktails_df) %>%
  recipes::update_role(name, category, new_role = "id") %>%
  recipes::step_normalize(all_predictors()) %>%
  recipes::step_pca(all_predictors())
pca_prep <- recipes::prep(pca_rec)
pca_prep
```

```{r}
#| eval: false
foo <- pca_prep %>% recipes::tidy(1)
foo %>% dplyr::filter(value == max(value))
```

### Ex 5

```{r}
#| eval: false
bar <- pca_prep %>% recipes::tidy(2)
```

```{r}
#| eval: false
bar %>%
  dplyr::filter(component %in% paste0("PC", 1:5)) %>%
  dplyr::mutate(component = forcats::fct_inorder(component)) %>%
  ggplot(aes(value, terms, fill = terms)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~component, nrow = 1) +
  labs(y = NULL) +
  theme(axis.text=element_text(size=7),
        axis.title=element_text(size=14,face="bold"))
```

### Ex 6

```{r}
#| eval: false
#library(tidytext)
bar %>%
  dplyr::filter(component %in% paste0("PC", 1:4)) %>%
  dplyr::group_by(component) %>%
  dplyr::slice_max(n = 8, order_by = abs(value)) %>%
  dplyr::ungroup() %>%
  dplyr::mutate(
    terms = tidytext::reorder_within(terms, by = abs(value), within = component)
  ) %>%
  ggplot(aes(abs(value), terms, fill = value > 0)) +
  geom_col() +
  facet_wrap(~component, scales = "free_y") +
  scale_y_reordered() +
  labs(
    x = "Absolute value of contribution",
    y = NULL, fill = "Positive?"
  )
```

```{r}
#| eval: false
bar %>%
  dplyr::filter(component %in% paste0("PC", 1:4)) %>%
  dplyr::group_by(component) %>%
  dplyr::slice_max(n = 8, order_by = abs(value)) %>% 
  gt::gt() %>% 
  gt::tab_style(
    style = list(
      gt::cell_fill(color = "red"),
      gt::cell_text(weight = "bold")
      ),
    locations = gt::cells_body(
      columns = value,
      rows = value < 0
    )
  ) %>% 
    gt::tab_style(
    style = list(
      gt::cell_fill(color = "green"),
      gt::cell_text(weight = "bold")
      ),
    locations = gt::cells_body(
      columns = value,
      rows = value >= 0
    )
  ) %>% 
  gtExtras::gt_theme_espn()
  # gt::data_color(
  #   columns = value,
  #   method = "numeric",
  #   palette = "viridis",
  #   domain = c(-1, 1),
  #   reverse = TRUE
  # )
  # gt::data_color(
  #   columns = value,
  #   rows = value < 0,
  #   method = "numeric",
  #   palette = c("red", "green"),
  #   domain = c(-1, 1)
  # )
```

```{r}
#| eval: false
pca_prep %>% tidy(2)
```

### Ex 7

```{r}
#| eval: false
recipes::bake(pca_prep, new_data = cocktails_df) %>%
  ggplot(aes(PC1, PC2, label = name)) +
  geom_point(aes(color = category), alpha = 0.7, size = 2) +
  geom_text(check_overlap = TRUE, hjust = "inward") + #, family = "IBMPlexSans") +
  labs(color = NULL)
```

## UMAP

```{r}
#| eval: false
umap_rec <- recipes::recipe(~., data = cocktails_df) %>%
  recipes::update_role(name, category, new_role = "id") %>%
  recipes::step_normalize(all_predictors()) %>%
  embed::step_umap(all_predictors())
umap_prep <- recipes::prep(umap_rec)
umap_prep
```

```{r}
#| eval: false
recipes::bake(umap_prep, new_data = cocktails_df) %>%
  ggplot(aes(UMAP1, UMAP2, label = name)) +
  geom_point(aes(color = category), alpha = 0.7, size = 2) +
  geom_text(check_overlap = TRUE, hjust = "inward") + #, family = "IBMPlexSans") +
  labs(color = NULL)
```
